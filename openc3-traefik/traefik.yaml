---
# Listen for everything coming in on the standard HTTP port
entrypoints:
  web:
    address: ":2900"
http:
  middlewares:
    # Removes the first part of the url before passing onto the service
    # ie. /openc3-api/api becomes /api
    removeFirst:
      replacePathRegex:
        regex: "^/([^/]*)/(.*)"
        replacement: "/$2"
    # Serve /tools/base/index.html
    gotoToolsBaseIndex:
      replacePath:
        path: "/tools/base/index.html"
    # Adds /tools/base to the beginning of the given url
    # ie. /index.html becomes /tools/base/index.html
    addToolsBase:
      replacePathRegex:
        regex: "^/(.*)"
        replacement: "/tools/base/$1"
    # Adds index.html to the end of the given url
    # ie. /tools/staticdocs/ becomes /tools/staticdocs/index.html
    addIndexHtml:
      replacePathRegex:
        regex: "^(.*)/$"
        replacement: "$1/index.html"
    # Adds .html to the end of the given url
    # ie. /tools/staticdocs/docs becomes /tools/staticdocs/docs.html
    addDotHtml:
      replacePathRegex:
        regex: "^(.*)$"
        replacement: "$1.html"
  routers:
    # Note: Priorities control router check order with highest priority evaluated first
    # Route to the openc3 cmd/tlm api websockets
    api-cable-router:
      rule: PathPrefix(`/openc3-api/cable`)
      service: service-api-cable
      priority: 10
    # Route to the openc3 script api websockets
    script-cable-router:
      rule: PathPrefix(`/script-api/cable`)
      service: service-script-cable
      priority: 9
    # Route to the openc3 cmd/tlm api
    api-router:
      rule: PathPrefix(`/openc3-api`)
      service: service-api
      priority: 8
    # Route to the script api
    script-router:
      rule: PathPrefix(`/script-api`)
      service: service-script
      priority: 7
    # Route to other tool plugins hosted statically in Minio
    # Matches any path with a valid file extension which is assumed to be a static file
    # TODO: We need to make all static tool files use a fixed route (apply to all traefik.yaml files)
    tools-router:
      rule: PathRegexp(`/tools/.*/.*[.](ttf|otf|woff|woff2|html|js|css|png|jpg|jpeg|gif|svg|ico|json|xml|txt|pdf|zip|tar|gz|tgz|csv|tsv|md|yaml|yml|bin|doc|docx|xls|xlsx|ppt|pptx|mp4|mp3|wav|avi|mov|flv|swf|apk|ipa|deb|rpm|exe|msi|dmg|pkg|sh|bat|cmd|ps1|py|pl|rb|php|java|class|jar|war|ear|so|dll|lib|a|o|obj|pdb|pdb|lib|dylib|framework)`)
      service: service-minio
      priority: 6
    # Route to other tool plugins hosted statically in Minio
    # Where we need to add index.html to the path
    # Matches any tool name that starts with static and ends with slash
    statictools-index-router:
      rule: PathRegexp(`/tools/static.*/$`)
      middlewares:
        # add index.html to the end
        - "addIndexHtml"
      service: service-minio
      priority: 5
    # Route to other tool plugins hosted statically in Minio
    # Where we need to add .html to the path
    # Matches any tool name that starts with static
    statictools-dothtml-router:
      rule: PathRegexp(`/tools/static.*`)
      middlewares:
        # add .html to the end
        - "addDotHtml"
      service: service-minio
      priority: 4
    # Route to any path in minio
    files-router:
      rule: PathPrefix(`/files`)
      middlewares:
        # remove /files from the beginning
        - "removeFirst"
      service: service-minio
      priority: 3
    # Route to base files hosted statically in Minio
    # Matches any path with a valid file extension which is assumed to be a static file
    # TODO: We need to make all static tool files use a fixed route  (apply to all traefik.yaml files)
    base-router:
      rule: PathRegexp(`/.*[.](ttf|otf|woff|woff2|html|js|css|png|jpg|jpeg|gif|svg|ico|json|xml|txt|pdf|zip|tar|gz|tgz|csv|tsv|md|yaml|yml|bin|doc|docx|xls|xlsx|ppt|pptx|mp4|mp3|wav|avi|mov|flv|swf|apk|ipa|deb|rpm|exe|msi|dmg|pkg|sh|bat|cmd|ps1|py|pl|rb|php|java|class|jar|war|ear|so|dll|lib|a|o|obj|pdb|pdb|lib|dylib|framework)`)
      middlewares:
        # add /tools/base to the beginning
        - "addToolsBase"
      service: service-minio
      priority: 2
    # This is the default route for everything that doesn't match a more specific route
    # It gets us to the base openc3 application
    web-router:
      rule: HostRegexp(`.*`)
      middlewares:
        # Serve /tools/base/index.html from minio
        - "gotoToolsBaseIndex"
      service: service-minio
      priority: 1
  services:
    # The OpenC3 cmd/tlm api cable service
    service-api-cable:
      loadBalancer:
        passHostHeader: false
        servers:
          - url: "http://openc3-cosmos-cmd-tlm-api:3901"
    # The OpenC3 script api cable service
    service-script-cable:
      loadBalancer:
        passHostHeader: false
        servers:
          - url: "http://openc3-cosmos-script-runner-api:3902"
    # The OpenC3 cmd/tlm api service
    service-api:
      loadBalancer:
        passHostHeader: false
        servers:
          - url: "http://openc3-cosmos-cmd-tlm-api:2901"
    # The OpenC3 script api service
    service-script:
      loadBalancer:
        passHostHeader: false
        servers:
          - url: "http://openc3-cosmos-script-runner-api:2902"
    # The Minio S3 file server
    service-minio:
      loadBalancer:
        passHostHeader: false
        servers:
          - url: "http://openc3-minio:9000"
# Declare the routes are currently coming from this file, not dynamically
providers:
  file:
    filename: /etc/traefik/traefik.yaml
  http:
    endpoint: "http://openc3-cosmos-cmd-tlm-api:2901/openc3-api/traefik"
    pollInterval: "5s"

accessLog: {}
# api:
#   dashboard: true
#   insecure: true
# log:
#   filePath: '/etc/traefik/traefik.log'
#   level: 'DEBUG'
# accessLog:
#   filePath: '/etc/traefik/access.log'
#   fields:
#     defaultMode: keep
#     headers:
#       defaultMode: keep
